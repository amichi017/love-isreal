{"ast":null,"code":"import { DateTime } from 'luxon';\nimport { Calendar } from '../polyfills/Utils';\nimport { Daf } from './Daf';\nimport { IllegalArgumentException } from '../polyfills/errors';\n/**\r\n * This class calculates the Daf Yomi Bavli page (daf) for a given date. To calculate Daf Yomi Yerushalmi\r\n * use the {@link YerushalmiYomiCalculator}. The library may cover Mishna Yomi etc. at some point in the future.\r\n *\r\n * @author &copy; Bob Newell (original C code)\r\n * @author &copy; Eliyahu Hershfeld 2011 - 2019\r\n * @version 0.0.1\r\n */\n\nexport class YomiCalculator {\n  /**\r\n   * Returns the <a href=\"http://en.wikipedia.org/wiki/Daf_yomi\">Daf Yomi</a> <a\r\n   * href=\"http://en.wikipedia.org/wiki/Talmud\">Bavli</a> {@link Daf} for a given date. The first Daf Yomi cycle\r\n   * started on Rosh Hashana 5684 (September 11, 1923) and calculations prior to this date will result in an\r\n   * IllegalArgumentException thrown. For historical calculations (supported by this method), it is important to note\r\n   * that a change in length of the cycle was instituted starting in the eighth Daf Yomi cycle beginning on June 24,\r\n   * 1975. The Daf Yomi Bavli cycle has a single masechta of the Talmud Yerushalmi - Shekalim as part of the cycle.\r\n   * Unlike the Bavli where the number of daf per masechta was standardized since the original <a\r\n   * href=\"http://en.wikipedia.org/wiki/Daniel_Bomberg\">Bomberg Edition</a> published from 1520 - 1523, there is no\r\n   * uniform page length in the Yerushalmi. The early cycles had the Yerushalmi Shekalim length of 13 days following the\r\n   * <a href=\r\n   * \"https://he.wikipedia.org/wiki/%D7%93%D7%A4%D7%95%D7%A1_%D7%A1%D7%9C%D7%90%D7%95%D7%95%D7%99%D7%98%D7%90\">Slavuta/Zhytomyr</a>\r\n   * Shas used by <a href=\"http://en.wikipedia.org/wiki/Meir_Shapiro\">Rabbi Meir Shapiro</a>. With the start of the eighth Daf Yomi\r\n   * cycle beginning on June 24, 1975 the length of the Yerushalmi Shekalim was changed from 13 to 22 daf to follow\r\n   * the <a href=\"https://en.wikipedia.org/wiki/Vilna_Edition_Shas\">Vilna Shas</a> that is in common use today.\r\n   *\r\n   * @param calendar\r\n   *            the calendar date for calculation\r\n   * @return the {@link Daf}.\r\n   *\r\n   * @throws IllegalArgumentException\r\n   *             if the date is prior to the September 11, 1923 start date of the first Daf Yomi cycle\r\n   */\n  static getDafYomiBavli(calendar) {\n    /*\r\n     * The number of daf per masechta. Since the number of blatt in Shekalim changed on the 8th Daf Yomi cycle\r\n     * beginning on June 24, 1975 from 13 to 22, the actual calculation for blattPerMasechta[4] will later be\r\n     * adjusted based on the cycle.\r\n     */\n    const blattPerMasechta = [64, 157, 105, 121, 22, 88, 56, 40, 35, 31, 32, 29, 27, 122, 112, 91, 66, 49, 90, 82, 119, 119, 176, 113, 24, 49, 76, 14, 120, 110, 142, 61, 34, 34, 28, 22, 4, 9, 5, 73];\n    const date = calendar.getDate();\n    let dafYomi;\n    const julianDay = this.getJulianDay(date);\n    let cycleNo = 0;\n    let dafNo = 0;\n\n    if (date < YomiCalculator.dafYomiStartDate) {\n      // TODO: should we return a null or throw an IllegalArgumentException?\n      throw new IllegalArgumentException(`${calendar} is prior to organized Daf Yomi Bavli cycles that started on ${YomiCalculator.dafYomiStartDate}`);\n    }\n\n    if (date > YomiCalculator.shekalimChangeDate || date.equals(YomiCalculator.shekalimChangeDate)) {\n      cycleNo = 8 + (julianDay - YomiCalculator.shekalimJulianChangeDay) / 2711;\n      dafNo = (julianDay - YomiCalculator.shekalimJulianChangeDay) % 2711;\n    } else {\n      cycleNo = 1 + (julianDay - YomiCalculator.dafYomiJulianStartDay) / 2702;\n      dafNo = (julianDay - YomiCalculator.dafYomiJulianStartDay) % 2702;\n    }\n\n    let total = 0;\n    let masechta = -1;\n    let blatt = 0;\n    /* Fix Shekalim for old cycles. */\n\n    if (cycleNo <= 7) {\n      blattPerMasechta[4] = 13;\n    } else {\n      blattPerMasechta[4] = 22; // correct any change that may have been changed from a prior calculation\n    }\n    /* Finally find the daf. */\n    // eslint-disable-next-line no-restricted-syntax\n\n\n    for (const blattInMasechta of blattPerMasechta) {\n      masechta++;\n      total = total + blattInMasechta - 1;\n\n      if (dafNo < total) {\n        blatt = 1 + blattInMasechta - (total - dafNo);\n        /* Fiddle with the weird ones near the end. */\n\n        if (masechta === 36) {\n          blatt += 21;\n        } else if (masechta === 37) {\n          blatt += 24;\n        } else if (masechta === 38) {\n          blatt += 32;\n        }\n\n        dafYomi = new Daf(masechta, blatt);\n        break;\n      }\n    }\n\n    return dafYomi;\n  }\n  /**\r\n   * Return the <a href=\"http://en.wikipedia.org/wiki/Julian_day\">Julian day</a> from a Java Date.\r\n   *\r\n   * @param date\r\n   *            The Java Date\r\n   * @return the Julian day number corresponding to the date\r\n   */\n\n\n  static getJulianDay(date) {\n    let {\n      year,\n      month\n    } = date;\n    const {\n      day\n    } = date;\n\n    if (month <= 2) {\n      year -= 1;\n      month += 12;\n    }\n\n    const a = Math.trunc(year / 100);\n    const b = 2 - a + Math.trunc(a / 4);\n    return Math.trunc(Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + b - 1524.5);\n  }\n\n}\nYomiCalculator.dafYomiStartDate = DateTime.fromObject({\n  year: 1923,\n  month: Calendar.SEPTEMBER + 1,\n  day: 11\n});\nYomiCalculator.dafYomiJulianStartDay = YomiCalculator.getJulianDay(YomiCalculator.dafYomiStartDate);\nYomiCalculator.shekalimChangeDate = DateTime.fromObject({\n  year: 1975,\n  month: Calendar.JUNE + 1,\n  day: 24\n});\nYomiCalculator.shekalimJulianChangeDay = YomiCalculator.getJulianDay(YomiCalculator.shekalimChangeDate);","map":{"version":3,"sources":["../../../src/hebrewcalendar/YomiCalculator.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { DateTime } from 'luxon';\r\nimport { Calendar } from '../polyfills/Utils';\r\nimport { Daf } from './Daf';\r\nimport { IllegalArgumentException } from '../polyfills/errors';\r\n/**\r\n * This class calculates the Daf Yomi Bavli page (daf) for a given date. To calculate Daf Yomi Yerushalmi\r\n * use the {@link YerushalmiYomiCalculator}. The library may cover Mishna Yomi etc. at some point in the future.\r\n *\r\n * @author &copy; Bob Newell (original C code)\r\n * @author &copy; Eliyahu Hershfeld 2011 - 2019\r\n * @version 0.0.1\r\n */\r\nexport class YomiCalculator {\r\n    /**\r\n     * Returns the <a href=\"http://en.wikipedia.org/wiki/Daf_yomi\">Daf Yomi</a> <a\r\n     * href=\"http://en.wikipedia.org/wiki/Talmud\">Bavli</a> {@link Daf} for a given date. The first Daf Yomi cycle\r\n     * started on Rosh Hashana 5684 (September 11, 1923) and calculations prior to this date will result in an\r\n     * IllegalArgumentException thrown. For historical calculations (supported by this method), it is important to note\r\n     * that a change in length of the cycle was instituted starting in the eighth Daf Yomi cycle beginning on June 24,\r\n     * 1975. The Daf Yomi Bavli cycle has a single masechta of the Talmud Yerushalmi - Shekalim as part of the cycle.\r\n     * Unlike the Bavli where the number of daf per masechta was standardized since the original <a\r\n     * href=\"http://en.wikipedia.org/wiki/Daniel_Bomberg\">Bomberg Edition</a> published from 1520 - 1523, there is no\r\n     * uniform page length in the Yerushalmi. The early cycles had the Yerushalmi Shekalim length of 13 days following the\r\n     * <a href=\r\n     * \"https://he.wikipedia.org/wiki/%D7%93%D7%A4%D7%95%D7%A1_%D7%A1%D7%9C%D7%90%D7%95%D7%95%D7%99%D7%98%D7%90\">Slavuta/Zhytomyr</a>\r\n     * Shas used by <a href=\"http://en.wikipedia.org/wiki/Meir_Shapiro\">Rabbi Meir Shapiro</a>. With the start of the eighth Daf Yomi\r\n     * cycle beginning on June 24, 1975 the length of the Yerushalmi Shekalim was changed from 13 to 22 daf to follow\r\n     * the <a href=\"https://en.wikipedia.org/wiki/Vilna_Edition_Shas\">Vilna Shas</a> that is in common use today.\r\n     *\r\n     * @param calendar\r\n     *            the calendar date for calculation\r\n     * @return the {@link Daf}.\r\n     *\r\n     * @throws IllegalArgumentException\r\n     *             if the date is prior to the September 11, 1923 start date of the first Daf Yomi cycle\r\n     */\r\n    static getDafYomiBavli(calendar) {\r\n        /*\r\n         * The number of daf per masechta. Since the number of blatt in Shekalim changed on the 8th Daf Yomi cycle\r\n         * beginning on June 24, 1975 from 13 to 22, the actual calculation for blattPerMasechta[4] will later be\r\n         * adjusted based on the cycle.\r\n         */\r\n        const blattPerMasechta = [64, 157, 105, 121, 22, 88, 56, 40, 35, 31, 32, 29, 27, 122, 112, 91, 66, 49, 90, 82,\r\n            119, 119, 176, 113, 24, 49, 76, 14, 120, 110, 142, 61, 34, 34, 28, 22, 4, 9, 5, 73];\r\n        const date = calendar.getDate();\r\n        let dafYomi;\r\n        const julianDay = this.getJulianDay(date);\r\n        let cycleNo = 0;\r\n        let dafNo = 0;\r\n        if (date < YomiCalculator.dafYomiStartDate) {\r\n            // TODO: should we return a null or throw an IllegalArgumentException?\r\n            throw new IllegalArgumentException(`${calendar} is prior to organized Daf Yomi Bavli cycles that started on ${YomiCalculator.dafYomiStartDate}`);\r\n        }\r\n        if ((date > YomiCalculator.shekalimChangeDate) || date.equals(YomiCalculator.shekalimChangeDate)) {\r\n            cycleNo = 8 + ((julianDay - YomiCalculator.shekalimJulianChangeDay) / 2711);\r\n            dafNo = ((julianDay - YomiCalculator.shekalimJulianChangeDay) % 2711);\r\n        }\r\n        else {\r\n            cycleNo = 1 + ((julianDay - YomiCalculator.dafYomiJulianStartDay) / 2702);\r\n            dafNo = ((julianDay - YomiCalculator.dafYomiJulianStartDay) % 2702);\r\n        }\r\n        let total = 0;\r\n        let masechta = -1;\r\n        let blatt = 0;\r\n        /* Fix Shekalim for old cycles. */\r\n        if (cycleNo <= 7) {\r\n            blattPerMasechta[4] = 13;\r\n        }\r\n        else {\r\n            blattPerMasechta[4] = 22; // correct any change that may have been changed from a prior calculation\r\n        }\r\n        /* Finally find the daf. */\r\n        // eslint-disable-next-line no-restricted-syntax\r\n        for (const blattInMasechta of blattPerMasechta) {\r\n            masechta++;\r\n            total = total + blattInMasechta - 1;\r\n            if (dafNo < total) {\r\n                blatt = 1 + blattInMasechta - (total - dafNo);\r\n                /* Fiddle with the weird ones near the end. */\r\n                if (masechta === 36) {\r\n                    blatt += 21;\r\n                }\r\n                else if (masechta === 37) {\r\n                    blatt += 24;\r\n                }\r\n                else if (masechta === 38) {\r\n                    blatt += 32;\r\n                }\r\n                dafYomi = new Daf(masechta, blatt);\r\n                break;\r\n            }\r\n        }\r\n        return dafYomi;\r\n    }\r\n    /**\r\n     * Return the <a href=\"http://en.wikipedia.org/wiki/Julian_day\">Julian day</a> from a Java Date.\r\n     *\r\n     * @param date\r\n     *            The Java Date\r\n     * @return the Julian day number corresponding to the date\r\n     */\r\n    static getJulianDay(date) {\r\n        let { year, month } = date;\r\n        const { day } = date;\r\n        if (month <= 2) {\r\n            year -= 1;\r\n            month += 12;\r\n        }\r\n        const a = Math.trunc(year / 100);\r\n        const b = 2 - a + Math.trunc(a / 4);\r\n        return Math.trunc(Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + b - 1524.5);\r\n    }\r\n}\r\nYomiCalculator.dafYomiStartDate = DateTime.fromObject({\r\n    year: 1923,\r\n    month: Calendar.SEPTEMBER + 1,\r\n    day: 11,\r\n});\r\nYomiCalculator.dafYomiJulianStartDay = YomiCalculator.getJulianDay(YomiCalculator.dafYomiStartDate);\r\nYomiCalculator.shekalimChangeDate = DateTime.fromObject({ year: 1975, month: Calendar.JUNE + 1, day: 24 });\r\nYomiCalculator.shekalimJulianChangeDay = YomiCalculator.getJulianDay(YomiCalculator.shekalimChangeDate);\r\n//# sourceMappingURL=YomiCalculator.js.map"]},"metadata":{},"sourceType":"module"}