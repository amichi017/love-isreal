{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\my-app\\\\frontend\\\\src\\\\Component\\\\PrayerLoveIsreal.js\";\n///https://api.sunrise-sunset.org/json?lat=28.6444800&lng=77.216721&date=today\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { ComplexZmanimCalendar, getZmanimJson } from \"kosher-zmanim\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { FullscreenExit } from '@material-ui/icons';\n\nconst KosherZmanim = require(\"kosher-zmanim\");\n\nlet date = new Date(2020, 9, 16);\nlet str = '';\n\nif (date.toString().includes('(שעון ישראל (חורף))')) {\n  str += '-2';\n} else {\n  str += '-3';\n}\n\nconsole.log(str, 'str');\nconst options = {\n  date: date,\n  timeZoneId: 'Etc/GMT' + str,\n  locationName: 'IL',\n  latitude: 31.6333308,\n  longitude: 35.2166658 // complexZmanim: true,\n  // elevation?: number = 0,\n\n};\nconst zmanim = KosherZmanim.getZmanimJson(options);\nconst theme = createMuiTheme({\n  direction: 'rtl' // Both here and <body dir=\"rtl\">\n\n});\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 320,\n    marginTop: 30,\n    paddingTop: 30\n  },\n  tableTow: {\n    align: 'right',\n    maxWidth: 320,\n    marginTop: 30 // paddingTop:30,\n\n  },\n  paper: {\n    maxWidth: 320,\n    marginTop: 20,\n    margin: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: \"wrap\",\n    marginBottom: 30\n  },\n  paperTyp: {\n    maxWidth: 320,\n    height: 60,\n    margin: 'auto',\n    marginTop: 90,\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: \"wrap\",\n    textAlign: 'center',\n    backgroundColor: '#3366cc',\n    color: '#ffffff',\n    textSize: 40\n  },\n  paperTypTow: {\n    maxWidth: 320,\n    height: 60,\n    margin: 'auto',\n    marginTop: 45,\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: \"wrap\",\n    textAlign: 'center',\n    backgroundColor: '#3366cc',\n    color: '#ffffff',\n    textSize: 40\n  }\n});\n\nfunction createData(name, calories) {\n  return {\n    name,\n    calories\n  };\n}\n\nconst trnsfrom = (hours, minutes, seconds) => {\n  let str = '';\n  hours < 10 ? str += '0' : str += '';\n  str += String(hours);\n  str += ':';\n  minutes < 10 ? str += '0' : str += '';\n  str += String(minutes);\n  str += ':';\n  seconds < 10 ? seconds += '0' : seconds += '';\n  str += String(seconds);\n  return str;\n};\n\nlet dateBeforSub = new Date(zmanim.BasicZmanim.SeaLevelSunset);\nlet sub = dateBeforSub.getTime() - 15 * 60 * 1000;\nlet timeAfterMinusDay = new Date(sub);\nconst rows = [createData(\"06:45:00\", 'תפילת שחרית'), createData(trnsfrom(timeAfterMinusDay.getHours(), timeAfterMinusDay.getMinutes(), timeAfterMinusDay.getSeconds()), 'תפילת מנחה'), createData(\"  לאחר תפילת מנחה\", \" תפילת ערבית \")];\nexport default function PrayerLoveIsreal() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paperTyp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 3\n    }\n  }), \"\\u05D6\\u05DE\\u05E0\\u05D9 \\u05D4\\u05EA\\u05E4\\u05D9\\u05DC\\u05D5\\u05EA \\u05D1\\u05D1\\u05D9\\u05EA \\u05DB\\u05E0\\u05E1\\u05EA \\u05DC\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA\", \" \", String(new Date().getDate() + \"/\" + (new Date().getMonth() + 1) + \"/\" + new Date().getFullYear()))), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, rows.map((row, index) => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    style: {\n      textAlign: 'right',\n      backgroundColor: index % 2 === 0 ? '#ffff' : '#1212',\n      color: '#ff9900'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      textAlign: 'right',\n      backgroundColor: index % 2 === 0 ? '#ffff' : '#1212',\n      color: '#ffff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, row.calories)))))));\n}","map":{"version":3,"sources":["C:/react/my-app/frontend/src/Component/PrayerLoveIsreal.js"],"names":["React","makeStyles","Table","TableBody","TableCell","Paper","TableHead","TableRow","Typography","Divider","ComplexZmanimCalendar","getZmanimJson","createMuiTheme","ThemeProvider","FullscreenExit","KosherZmanim","require","date","Date","str","toString","includes","console","log","options","timeZoneId","locationName","latitude","longitude","zmanim","theme","direction","useStyles","table","maxWidth","marginTop","paddingTop","tableTow","align","paper","margin","display","flexDirection","flexWrap","marginBottom","paperTyp","height","textAlign","backgroundColor","color","textSize","paperTypTow","createData","name","calories","trnsfrom","hours","minutes","seconds","String","dateBeforSub","BasicZmanim","SeaLevelSunset","sub","getTime","timeAfterMinusDay","rows","getHours","getMinutes","getSeconds","PrayerLoveIsreal","classes","getDate","getMonth","getFullYear","map","row","index"],"mappings":"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","sourcesContent":["///https://api.sunrise-sunset.org/json?lat=28.6444800&lng=77.216721&date=today\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { ComplexZmanimCalendar, getZmanimJson } from \"kosher-zmanim\";\r\n\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\r\nimport { FullscreenExit } from '@material-ui/icons';\r\nconst KosherZmanim = require(\"kosher-zmanim\");\r\nlet date=new Date(2020,9,16)\r\nlet str='';\r\nif(date.toString().includes('(שעון ישראל (חורף))')){\r\nstr+='-2'\r\n}\r\nelse{\r\n  str+='-3'\r\n}\r\n\r\n\r\nconsole.log(str,'str');\r\nconst options ={\r\n    date: date,\r\n    timeZoneId: 'Etc/GMT'+str,\r\n   locationName: 'IL',\r\n    latitude: 31.6333308,\r\n    longitude: 35.2166658,\r\n   // complexZmanim: true,\r\n   // elevation?: number = 0,\r\n    \r\n\r\n}\r\nconst zmanim = KosherZmanim.getZmanimJson(options);\r\n\r\n\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  direction: 'rtl', // Both here and <body dir=\"rtl\">\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    maxWidth: 320,\r\n    marginTop:30,\r\n    paddingTop:30,\r\n   \r\n  },\r\n  tableTow:{\r\n    align:'right',\r\n    maxWidth: 320,\r\n    marginTop:30,\r\n    \r\n    // paddingTop:30,\r\n   \r\n  },\r\n \r\n  paper:{\r\n    maxWidth: 320,\r\n    marginTop:20,\r\n    margin:'auto',\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    flexWrap:\"wrap\",\r\n    marginBottom:30,\r\n\r\n  },\r\n  paperTyp:{\r\n    maxWidth: 320,\r\n    height:60,\r\n    margin:'auto',\r\n    marginTop:90,\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    flexWrap:\"wrap\",\r\n    textAlign: 'center',\r\n    backgroundColor: '#3366cc',\r\n    color: '#ffffff',\r\n    \r\n    textSize:40,\r\n  },\r\n  paperTypTow:{\r\n    maxWidth: 320,\r\n    height:60,\r\n    margin:'auto',\r\n    marginTop:45,\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    flexWrap:\"wrap\",\r\n    textAlign: 'center',\r\n    backgroundColor: '#3366cc',\r\n    color: '#ffffff',\r\n    textSize:40,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, ) {\r\n  return { name, calories,  };\r\n}\r\n\r\n\r\nconst trnsfrom=(hours,minutes,seconds)=>{\r\n  let str='';\r\n  (hours<10)?str+='0':str+='';\r\n  str+=String(hours);\r\n  str+=':';\r\n  (minutes<10)?str+='0':str+='';\r\n  str+=String(minutes);\r\n  str+=':';\r\n  (seconds<10)?seconds+='0':seconds+='';\r\n  str+=String(seconds);\r\n  return str;\r\n\r\n}\r\nlet dateBeforSub=new Date(zmanim.BasicZmanim.SeaLevelSunset);\r\nlet sub=(dateBeforSub.getTime()-(15*60*1000));\r\nlet timeAfterMinusDay=new Date(sub);\r\nconst rows = [\r\n\r\n    createData(\"06:45:00\", 'תפילת שחרית' ),\r\n    createData(trnsfrom(timeAfterMinusDay.getHours(),timeAfterMinusDay.getMinutes(),timeAfterMinusDay.getSeconds()), 'תפילת מנחה', ),\r\n    createData(\"  לאחר תפילת מנחה\", \" תפילת ערבית \" ),\r\n\r\n];\r\n\r\nexport default function PrayerLoveIsreal() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <Paper className={classes.paperTyp}>\r\n<Typography style={{ }} >\r\n  <br></br>\r\n    זמני התפילות בבית כנסת לתאריך\r\n  {\" \"}\r\n  {String(new Date().getDate()+\"/\"+ (new Date().getMonth()+1) +\"/\"+new Date().getFullYear())}\r\n</Typography>\r\n \r\n    </Paper>\r\n   \r\n    <Paper className={classes.paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n          \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row,index) => (\r\n            <TableRow \r\n            key={row.name} \r\n           \r\n            >\r\n\r\n              <TableCell \r\n            \r\n              component=\"th\" \r\n              scope=\"row\" \r\n              style={{textAlign:'right',backgroundColor:(index%2===0)?'#ffff':'#1212',color:'#ff9900'}}>\r\n                {row.name}\r\n              </TableCell>\r\n\r\n              <TableCell \r\n              \r\n              style={{textAlign:'right',backgroundColor:(index%2===0)?'#ffff':'#1212',color:'#ffff'}}>\r\n              {row.calories}\r\n              </TableCell>\r\n   \r\n            \r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      </Paper>\r\n   \r\n    </ThemeProvider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}