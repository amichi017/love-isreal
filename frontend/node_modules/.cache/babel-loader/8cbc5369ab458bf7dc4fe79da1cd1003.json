{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\my-app\\\\src\\\\Component\\\\PrayerHours.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nconst useStyles = makeStyles({\n  table: {\n    position: 'absolute',\n    top: 100,\n    left: 50,\n    align: 'right',\n    maxWidth: 340,\n    marginTop: 30,\n    paddingTop: 30\n  },\n  paper: {\n    maxWidth: 350,\n    marginTop: 30\n  }\n});\n\nfunction createData(name, calories) {\n  return {\n    name,\n    calories\n  };\n}\n\nconst rows = [createData('12:54', 'חחחגחגח'), createData('Ice cream sandwich', 237), createData('Eclair', 262), createData('Cupcake', 305), createData('Gingerbread', 356), createData('Frozen yoghurt', 159), createData('Ice cream sandwich', 237), createData('Eclair', 262), createData('Cupcake', 305), createData('Gingerbread', 356), createData('Frozen yoghurt', 159), createData('Ice cream sandwich', 237), createData('Eclair', 262), createData('Cupcake', 305), createData('Gingerbread', 356)];\nexport default function PrayerHours() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, rows.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    style: {\n      position: 'absolute',\n      left: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, row.protein))))));\n}","map":{"version":3,"sources":["C:/react/my-app/src/Component/PrayerHours.js"],"names":["React","makeStyles","Table","TableBody","TableCell","Paper","TableHead","TableRow","useStyles","table","position","top","left","align","maxWidth","marginTop","paddingTop","paper","createData","name","calories","rows","PrayerHours","classes","map","row","fat","carbs","protein"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    position:'absolute',\r\n    top:100,\r\n    left:50,\r\n    align:'right',\r\n    maxWidth: 340,\r\n    marginTop:30,\r\n    paddingTop:30,\r\n   \r\n  },\r\n  paper:{\r\n    maxWidth: 350,\r\n    marginTop:30,\r\n  }\r\n});\r\n\r\nfunction createData(name, calories, ) {\r\n  return { name, calories,  };\r\n}\r\n\r\nconst rows = [\r\n  createData('12:54', 'חחחגחגח', ),\r\n  createData('Ice cream sandwich', 237,),\r\n  createData('Eclair', 262, ),\r\n  createData('Cupcake', 305,),\r\n  createData('Gingerbread', 356, ),\r\n  createData('Frozen yoghurt', 159, ),\r\n  createData('Ice cream sandwich', 237,),\r\n  createData('Eclair', 262, ),\r\n  createData('Cupcake', 305,),\r\n  createData('Gingerbread', 356, ),\r\n  createData('Frozen yoghurt', 159, ),\r\n  createData('Ice cream sandwich', 237,),\r\n  createData('Eclair', 262, ),\r\n  createData('Cupcake', 305,),\r\n  createData('Gingerbread', 356, ),\r\n];\r\n\r\nexport default function PrayerHours() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n          \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\" style={{ position:'absolute',\r\n   \r\n    left:100,}}>{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}