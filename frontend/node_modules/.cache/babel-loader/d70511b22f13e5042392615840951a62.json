{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\my-app\\\\frontend\\\\src\\\\Screen\\\\Map.js\";\nimport React from 'react';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport { Descriptions } from 'antd';\n\nconst {\n  MarkerWithLabel\n} = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\");\n\nGeocode.setApiKey(\"AIzaSyALVjLwOIM1gf7EzdJJVmWLKdLP-yZGTcw\");\nGeocode.enableDebug();\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      markerPosition: {\n        lat: latValue,\n        lng: lngValue\n      },\n      mapPosition: {\n        lat: latValue,\n        lng: lngValue\n      }\n    };\n  }\n\n  render() {\n    const AsyncMap = withScriptjs(withGoogleMap(props => /*#__PURE__*/React.createElement(GoogleMap, {\n      defaultZoom: this.state.zoom,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      google: this.props.google,\n      name: 'Dolores park',\n      draggable: true,\n      onDragEnd: this.onMarkerDragEnd,\n      position: {\n        lat: this.state.markerPosition.lat,\n        lng: this.state.markerPosition.lng\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      onClose: this.onInfoWindowClose,\n      position: {\n        lat: this.state.markerPosition.lat + 0.0018,\n        lng: this.state.markerPosition.lng\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        padding: 0,\n        margin: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, this.state.address))), /*#__PURE__*/React.createElement(Marker, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Autocomplete, {\n      style: {\n        width: '100%',\n        height: '40px',\n        paddingLeft: '16px',\n        marginTop: '2px',\n        marginBottom: '2rem'\n      },\n      onPlaceSelected: this.onPlaceSelected,\n      types: ['(regions)'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '1rem',\n        margin: '0 auto',\n        maxWidth: 1000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"Google Map Basic\"), /*#__PURE__*/React.createElement(Descriptions, {\n      bordered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"City\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, this.state.city), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, this.state.area), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"State\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, this.state.state), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, this.state.address)), /*#__PURE__*/React.createElement(AsyncMap, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyALVjLwOIM1gf7EzdJJVmWLKdLP-yZGTcw&libraries=places\",\n      loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }),\n      containerElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: this.state.height\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }),\n      mapElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["C:/react/my-app/frontend/src/Screen/Map.js"],"names":["React","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","Descriptions","MarkerWithLabel","require","setApiKey","enableDebug","Map","Component","state","markerPosition","lat","latValue","lng","lngValue","mapPosition","render","AsyncMap","props","zoom","google","onMarkerDragEnd","onInfoWindowClose","padding","margin","address","width","height","paddingLeft","marginTop","marginBottom","onPlaceSelected","maxWidth","city","area"],"mappings":"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","sourcesContent":["\r\n\r\nimport React from 'react';\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport { Descriptions } from 'antd';\r\n\r\nconst { MarkerWithLabel } = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\");\r\n\r\n\r\nGeocode.setApiKey(\"AIzaSyALVjLwOIM1gf7EzdJJVmWLKdLP-yZGTcw\");\r\nGeocode.enableDebug();\r\n\r\nclass Map extends React.Component {\r\n\r\n state={  \r\n     markerPosition: {\r\n    lat: latValue,\r\n    lng: lngValue\r\n},\r\nmapPosition: {\r\n    lat: latValue,\r\n    lng: lngValue\r\n},}\r\n \r\n\r\n    render() {\r\n        const AsyncMap = withScriptjs(\r\n            withGoogleMap(\r\n                props => (\r\n                    <GoogleMap\r\n                        defaultZoom={this.state.zoom}\r\n                        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n                    >\r\n                        {/* InfoWindow on top of marker */}\r\n\r\n                        {/*Marker*/}\r\n                        <Marker\r\n                            google={this.props.google}\r\n                            name={'Dolores park'}\r\n                            draggable={true}\r\n                            onDragEnd={this.onMarkerDragEnd}\r\n                            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n                        />\r\n                        <InfoWindow\r\n                            onClose={this.onInfoWindowClose}\r\n                            position={{ lat: (this.state.markerPosition.lat + 0.0018), lng: this.state.markerPosition.lng }}\r\n                        >\r\n                            <div>\r\n                                <span style={{ padding: 0, margin: 0 }}>{this.state.address}</span>\r\n                            </div>\r\n                        </InfoWindow>\r\n                        <Marker />\r\n\r\n                        {/* <MarkerWithLabel\r\n                            position={{ lat: -34.397, lng: 150.644 }}\r\n                            labelAnchor={new google.maps.Point(0, 0)}\r\n                            labelStyle={{ backgroundColor: \"yellow\", fontSize: \"32px\", padding: \"16px\" }}\r\n                        >\r\n                            <div>Hello There!</div>\r\n                        </MarkerWithLabel> */}\r\n\r\n\r\n                        {/* For Auto complete Search Box */}\r\n                        <Autocomplete\r\n                            style={{\r\n                                width: '100%',\r\n                                height: '40px',\r\n                                paddingLeft: '16px',\r\n                                marginTop: '2px',\r\n                                marginBottom: '2rem'\r\n                            }}\r\n                            onPlaceSelected={this.onPlaceSelected}\r\n                            types={['(regions)']}\r\n                        />\r\n                    </GoogleMap>\r\n                )\r\n            )\r\n        );\r\n\r\n        return (\r\n            <div style={{ padding: '1rem', margin: '0 auto', maxWidth: 1000 }}>\r\n                <h1>Google Map Basic</h1>\r\n                <Descriptions bordered>\r\n                    <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Area\">{this.state.area}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\r\n                </Descriptions>\r\n\r\n                <AsyncMap\r\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyALVjLwOIM1gf7EzdJJVmWLKdLP-yZGTcw&libraries=places\"\r\n                    loadingElement={\r\n                        <div style={{ height: `100%` }} />\r\n                    }\r\n                    containerElement={\r\n                        <div style={{ height: this.state.height }} />\r\n                    }\r\n                    mapElement={\r\n                        <div style={{ height: `100%` }} />\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}